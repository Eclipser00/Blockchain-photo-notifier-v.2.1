{
  "abi": [
    {
      "inputs": [],
      "name": "AlreadyClaimed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidRecipient",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "fileHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Anchored",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "fileHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Transferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "fileHash",
          "type": "bytes32"
        }
      ],
      "name": "anchor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "claims",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "fileHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/PhotoRegistry.sol"
  },
  "ast": {
    "absolutePath": "contracts/PhotoRegistry.sol",
    "exportedSymbols": {
      "PhotoRegistry": [
        122
      ]
    },
    "id": 123,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "PhotoRegistry",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 122,
        "linearizedBaseContracts": [
          122
        ],
        "name": "PhotoRegistry",
        "nameLocation": "67:13:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "PhotoRegistry.Claim",
            "id": 6,
            "members": [
              {
                "constant": false,
                "id": 3,
                "mutability": "mutable",
                "name": "owner",
                "nameLocation": "110:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 6,
                "src": "102:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "102:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 5,
                "mutability": "mutable",
                "name": "timestamp",
                "nameLocation": "125:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 6,
                "src": "117:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "117:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Claim",
            "nameLocation": "94:5:0",
            "nodeType": "StructDefinition",
            "scope": 122,
            "src": "87:50:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "eff0f592",
            "id": 11,
            "mutability": "mutable",
            "name": "claims",
            "nameLocation": "175:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "142:39:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$6_storage_$",
              "typeString": "mapping(bytes32 => struct PhotoRegistry.Claim)"
            },
            "typeName": {
              "id": 10,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 7,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "150:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "142:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$6_storage_$",
                "typeString": "mapping(bytes32 => struct PhotoRegistry.Claim)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 9,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 8,
                  "name": "Claim",
                  "nameLocations": [
                    "161:5:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6,
                  "src": "161:5:0"
                },
                "referencedDeclaration": 6,
                "src": "161:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Claim_$6_storage_ptr",
                  "typeString": "struct PhotoRegistry.Claim"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "fe2289542f7a0110ac112c3a4d712afdcaaf2900a1326f4e6f340b563a0e8734",
            "id": 19,
            "name": "Anchored",
            "nameLocation": "194:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "fileHash",
                  "nameLocation": "219:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "203:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "203:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "245:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "229:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "229:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "260:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "252:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "252:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "202:68:0"
            },
            "src": "188:83:0"
          },
          {
            "anonymous": false,
            "eventSelector": "4cafe8c90c0e3a2fa8da6fa1827b31ff8be7d9efb7f85b110c3481ad9b36beff",
            "id": 29,
            "name": "Transferred",
            "nameLocation": "282:11:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "fileHash",
                  "nameLocation": "310:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "294:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "294:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "336:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "320:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "320:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "358:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "342:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "342:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "370:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "362:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "362:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "293:87:0"
            },
            "src": "276:105:0"
          },
          {
            "errorSelector": "646cf558",
            "id": 31,
            "name": "AlreadyClaimed",
            "nameLocation": "393:14:0",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "407:2:0"
            },
            "src": "387:23:0"
          },
          {
            "errorSelector": "30cd7471",
            "id": 33,
            "name": "NotOwner",
            "nameLocation": "421:8:0",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "429:2:0"
            },
            "src": "415:17:0"
          },
          {
            "errorSelector": "9c8d2cd2",
            "id": 35,
            "name": "InvalidRecipient",
            "nameLocation": "443:16:0",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "459:2:0"
            },
            "src": "437:25:0"
          },
          {
            "body": {
              "id": 72,
              "nodeType": "Block",
              "src": "511:207:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 40,
                          "name": "claims",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "525:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$6_storage_$",
                            "typeString": "mapping(bytes32 => struct PhotoRegistry.Claim storage ref)"
                          }
                        },
                        "id": 42,
                        "indexExpression": {
                          "id": 41,
                          "name": "fileHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "532:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "525:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$6_storage",
                          "typeString": "struct PhotoRegistry.Claim storage ref"
                        }
                      },
                      "id": 43,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "542:5:0",
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3,
                      "src": "525:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 46,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "559:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 45,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "551:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 44,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "551:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 47,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "551:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "525:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 52,
                  "nodeType": "IfStatement",
                  "src": "521:65:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 49,
                        "name": "AlreadyClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "570:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 50,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "570:16:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 51,
                    "nodeType": "RevertStatement",
                    "src": "563:23:0"
                  }
                },
                {
                  "expression": {
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 53,
                        "name": "claims",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "596:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$6_storage_$",
                          "typeString": "mapping(bytes32 => struct PhotoRegistry.Claim storage ref)"
                        }
                      },
                      "id": 55,
                      "indexExpression": {
                        "id": 54,
                        "name": "fileHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "603:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "596:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$6_storage",
                        "typeString": "struct PhotoRegistry.Claim storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 57,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "621:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 58,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "625:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "621:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 59,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "633:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 60,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "639:9:0",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "633:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 56,
                        "name": "Claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "615:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Claim_$6_storage_ptr_$",
                          "typeString": "type(struct PhotoRegistry.Claim storage pointer)"
                        }
                      },
                      "id": 61,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "615:34:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$6_memory_ptr",
                        "typeString": "struct PhotoRegistry.Claim memory"
                      }
                    },
                    "src": "596:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$6_storage",
                      "typeString": "struct PhotoRegistry.Claim storage ref"
                    }
                  },
                  "id": 63,
                  "nodeType": "ExpressionStatement",
                  "src": "596:53:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 65,
                        "name": "fileHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "673:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 66,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "683:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "687:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "683:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 68,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "695:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 69,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "701:9:0",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "695:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 64,
                      "name": "Anchored",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "664:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,address,uint256)"
                      }
                    },
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "664:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71,
                  "nodeType": "EmitStatement",
                  "src": "659:52:0"
                }
              ]
            },
            "functionSelector": "eecdf927",
            "id": 73,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "anchor",
            "nameLocation": "477:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "mutability": "mutable",
                  "name": "fileHash",
                  "nameLocation": "492:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "484:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "484:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "483:18:0"
            },
            "returnParameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "511:0:0"
            },
            "scope": 122,
            "src": "468:250:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 120,
              "nodeType": "Block",
              "src": "792:280:0",
              "statements": [
                {
                  "assignments": [
                    81
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81,
                      "mutability": "mutable",
                      "name": "curr",
                      "nameLocation": "810:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 120,
                      "src": "802:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 80,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "802:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 82,
                        "name": "claims",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "817:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$6_storage_$",
                          "typeString": "mapping(bytes32 => struct PhotoRegistry.Claim storage ref)"
                        }
                      },
                      "id": 84,
                      "indexExpression": {
                        "id": 83,
                        "name": "fileHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75,
                        "src": "824:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "817:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$6_storage",
                        "typeString": "struct PhotoRegistry.Claim storage ref"
                      }
                    },
                    "id": 85,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "834:5:0",
                    "memberName": "owner",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3,
                    "src": "817:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "802:37:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 87,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "853:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "857:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "853:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 89,
                      "name": "curr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "867:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "853:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 94,
                  "nodeType": "IfStatement",
                  "src": "849:41:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 91,
                        "name": "NotOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "880:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 92,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "880:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 93,
                    "nodeType": "RevertStatement",
                    "src": "873:17:0"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 95,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "904:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 98,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "924:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "916:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 96,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "916:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 99,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "916:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "904:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 104,
                  "nodeType": "IfStatement",
                  "src": "900:53:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 101,
                        "name": "InvalidRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "935:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "935:18:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 103,
                    "nodeType": "RevertStatement",
                    "src": "928:25:0"
                  }
                },
                {
                  "expression": {
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 105,
                          "name": "claims",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "963:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$6_storage_$",
                            "typeString": "mapping(bytes32 => struct PhotoRegistry.Claim storage ref)"
                          }
                        },
                        "id": 107,
                        "indexExpression": {
                          "id": 106,
                          "name": "fileHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "970:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "963:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$6_storage",
                          "typeString": "struct PhotoRegistry.Claim storage ref"
                        }
                      },
                      "id": 108,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "980:5:0",
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3,
                      "src": "963:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 109,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "988:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "963:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "963:33:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 113,
                        "name": "fileHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75,
                        "src": "1023:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 114,
                        "name": "curr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "1033:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 115,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "1039:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 116,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "1049:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1055:9:0",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "1049:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 112,
                      "name": "Transferred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1011:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,address,address,uint256)"
                      }
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1011:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 119,
                  "nodeType": "EmitStatement",
                  "src": "1006:59:0"
                }
              ]
            },
            "functionSelector": "98b428a8",
            "id": 121,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwner",
            "nameLocation": "733:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75,
                  "mutability": "mutable",
                  "name": "fileHash",
                  "nameLocation": "755:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "747:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "747:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "773:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "765:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "765:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "746:36:0"
            },
            "returnParameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "792:0:0"
            },
            "scope": 122,
            "src": "724:348:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 123,
        "src": "58:1016:0",
        "usedErrors": [
          31,
          33,
          35
        ],
        "usedEvents": [
          19,
          29
        ]
      }
    ],
    "src": "32:1043:0"
  },
  "bytecode": "608060405234801561001057600080fd5b506102c9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806398b428a814610046578063eecdf9271461005b578063eff0f5921461006e575b600080fd5b61005961005436600461023e565b6100c4565b005b61005961006936600461027a565b61018b565b6100a161007c36600461027a565b600060208190529081526040902080546001909101546001600160a01b039091169082565b604080516001600160a01b03909316835260208301919091520160405180910390f35b6000828152602081905260409020546001600160a01b03163381146100fc576040516330cd747160e01b815260040160405180910390fd5b6001600160a01b03821661012357604051634e46966960e11b815260040160405180910390fd5b6000838152602081815260409182902080546001600160a01b0319166001600160a01b0386811691821790925592514281529084169186917f4cafe8c90c0e3a2fa8da6fa1827b31ff8be7d9efb7f85b110c3481ad9b36beff910160405180910390a4505050565b6000818152602081905260409020546001600160a01b0316156101c157604051630c8d9eab60e31b815260040160405180910390fd5b604080518082018252338082524260208084018281526000878152808352869020945185546001600160a01b0319166001600160a01b039091161785555160019094019390935592519283529183917ffe2289542f7a0110ac112c3a4d712afdcaaf2900a1326f4e6f340b563a0e8734910160405180910390a350565b6000806040838503121561025157600080fd5b8235915060208301356001600160a01b038116811461026f57600080fd5b809150509250929050565b60006020828403121561028c57600080fd5b503591905056fea264697066735822122060b878d4ce5bab4adfc3ee58c145629c94884b063ed6ebe232a4a27f4eaa987f64736f6c63430008140033",
  "bytecodeSha1": "2abd8f104b6436363ca4287a74f61086dc68f97b",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.20+commit.a1b79de6"
  },
  "contractName": "PhotoRegistry",
  "coverageMap": {
    "branches": {
      "0": {
        "PhotoRegistry.anchor": {
          "9": [
            525,
            561,
            false
          ]
        },
        "PhotoRegistry.transferOwner": {
          "7": [
            853,
            871,
            false
          ],
          "8": [
            904,
            926,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "PhotoRegistry.anchor": {
          "4": [
            521,
            586
          ],
          "5": [
            596,
            649
          ],
          "6": [
            659,
            711
          ]
        },
        "PhotoRegistry.transferOwner": {
          "0": [
            849,
            890
          ],
          "1": [
            900,
            953
          ],
          "2": [
            963,
            996
          ],
          "3": [
            1006,
            1065
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100415760003560e01c806398b428a814610046578063eecdf9271461005b578063eff0f5921461006e575b600080fd5b61005961005436600461023e565b6100c4565b005b61005961006936600461027a565b61018b565b6100a161007c36600461027a565b600060208190529081526040902080546001909101546001600160a01b039091169082565b604080516001600160a01b03909316835260208301919091520160405180910390f35b6000828152602081905260409020546001600160a01b03163381146100fc576040516330cd747160e01b815260040160405180910390fd5b6001600160a01b03821661012357604051634e46966960e11b815260040160405180910390fd5b6000838152602081815260409182902080546001600160a01b0319166001600160a01b0386811691821790925592514281529084169186917f4cafe8c90c0e3a2fa8da6fa1827b31ff8be7d9efb7f85b110c3481ad9b36beff910160405180910390a4505050565b6000818152602081905260409020546001600160a01b0316156101c157604051630c8d9eab60e31b815260040160405180910390fd5b604080518082018252338082524260208084018281526000878152808352869020945185546001600160a01b0319166001600160a01b039091161785555160019094019390935592519283529183917ffe2289542f7a0110ac112c3a4d712afdcaaf2900a1326f4e6f340b563a0e8734910160405180910390a350565b6000806040838503121561025157600080fd5b8235915060208301356001600160a01b038116811461026f57600080fd5b809150509250929050565b60006020828403121561028c57600080fd5b503591905056fea264697066735822122060b878d4ce5bab4adfc3ee58c145629c94884b063ed6ebe232a4a27f4eaa987f64736f6c63430008140033",
  "deployedSourceMap": "58:1016:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;724:348;;;;;;:::i;:::-;;:::i;:::-;;468:250;;;;;;:::i;:::-;;:::i;142:39::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;142:39:0;;;;;;;;;;-1:-1:-1;;;;;750:32:1;;;732:51;;814:2;799:18;;792:34;;;;705:18;142:39:0;;;;;;;724:348;802:12;817:16;;;;;;;;;;:22;-1:-1:-1;;;;;817:22:0;853:10;:18;;849:41;;880:10;;-1:-1:-1;;;880:10:0;;;;;;;;;;;849:41;-1:-1:-1;;;;;904:22:0;;900:53;;935:18;;-1:-1:-1;;;935:18:0;;;;;;;;;;;900:53;963:6;:16;;;;;;;;;;;;:33;;-1:-1:-1;;;;;;963:33:0;-1:-1:-1;;;;;963:33:0;;;;;;;;;1011:54;;1049:15;983:25:1;;1011:54:0;;;;963:16;;1011:54;;956:18:1;1011:54:0;;;;;;;792:280;724:348;;:::o;468:250::-;559:1;525:16;;;;;;;;;;:22;-1:-1:-1;;;;;525:22:0;:36;521:65;;570:16;;-1:-1:-1;;;570:16:0;;;;;;;;;;;521:65;615:34;;;;;;;;621:10;615:34;;;633:15;615:34;;;;;;;-1:-1:-1;596:16:0;;;;;;;;;:53;;;;-1:-1:-1;;;;;;596:53:0;-1:-1:-1;;;;;596:53:0;;;;;;;-1:-1:-1;596:53:0;;;;;;;664:47;;983:25:1;;;621:10:0;596:16;;664:47;;956:18:1;664:47:0;;;;;;;468:250;:::o;14:354:1:-;82:6;90;143:2;131:9;122:7;118:23;114:32;111:52;;;159:1;156;149:12;111:52;182:23;;;-1:-1:-1;255:2:1;240:18;;227:32;-1:-1:-1;;;;;288:31:1;;278:42;;268:70;;334:1;331;324:12;268:70;357:5;347:15;;;14:354;;;;;:::o;373:180::-;432:6;485:2;473:9;464:7;460:23;456:32;453:52;;;501:1;498;491:12;453:52;-1:-1:-1;524:23:1;;373:180;-1:-1:-1;373:180:1:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    58,
    1074
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x98B428A8 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xEECDF927 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0xEFF0F592 EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x23E JUMP JUMPDEST PUSH2 0xC4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x59 PUSH2 0x69 CALLDATASIZE PUSH1 0x4 PUSH2 0x27A JUMP JUMPDEST PUSH2 0x18B JUMP JUMPDEST PUSH2 0xA1 PUSH2 0x7C CALLDATASIZE PUSH1 0x4 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 EQ PUSH2 0xFC JUMPI PUSH1 0x40 MLOAD PUSH4 0x30CD7471 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x123 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4E469669 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP3 MLOAD TIMESTAMP DUP2 MSTORE SWAP1 DUP5 AND SWAP2 DUP7 SWAP2 PUSH32 0x4CAFE8C90C0E3A2FA8DA6FA1827B31FF8BE7D9EFB7F85B110C3481AD9B36BEFF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xC8D9EAB PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE CALLER DUP1 DUP3 MSTORE TIMESTAMP PUSH1 0x20 DUP1 DUP5 ADD DUP3 DUP2 MSTORE PUSH1 0x0 DUP8 DUP2 MSTORE DUP1 DUP4 MSTORE DUP7 SWAP1 KECCAK256 SWAP5 MLOAD DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP6 SSTORE MLOAD PUSH1 0x1 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP4 SSTORE SWAP3 MLOAD SWAP3 DUP4 MSTORE SWAP2 DUP4 SWAP2 PUSH32 0xFE2289542F7A0110AC112C3A4D712AFDCAAF2900A1326F4E6F340B563A0E8734 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x26F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0xB8 PUSH25 0xD4CE5BAB4ADFC3EE58C145629C94884B063ED6EBE232A4A27F 0x4E 0xAA SWAP9 PUSH32 0x64736F6C63430008140033000000000000000000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        58,
        1074
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        58,
        1074
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        58,
        1074
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        58,
        1074
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        58,
        1074
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        58,
        1074
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        58,
        1074
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        58,
        1074
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        58,
        1074
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        58,
        1074
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        58,
        1074
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        58,
        1074
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        58,
        1074
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        58,
        1074
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        58,
        1074
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        58,
        1074
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        58,
        1074
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41"
    },
    "25": {
      "fn": null,
      "offset": [
        58,
        1074
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        58,
        1074
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        58,
        1074
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        58,
        1074
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        58,
        1074
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        58,
        1074
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        58,
        1074
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x98B428A8"
    },
    "38": {
      "fn": null,
      "offset": [
        58,
        1074
      ],
      "op": "EQ",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        58,
        1074
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46"
    },
    "42": {
      "fn": null,
      "offset": [
        58,
        1074
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        58,
        1074
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        58,
        1074
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xEECDF927"
    },
    "49": {
      "fn": null,
      "offset": [
        58,
        1074
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        58,
        1074
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B"
    },
    "53": {
      "fn": null,
      "offset": [
        58,
        1074
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        58,
        1074
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        58,
        1074
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xEFF0F592"
    },
    "60": {
      "fn": null,
      "offset": [
        58,
        1074
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        58,
        1074
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6E"
    },
    "64": {
      "fn": null,
      "offset": [
        58,
        1074
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        58,
        1074
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        58,
        1074
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "68": {
      "fn": null,
      "offset": [
        58,
        1074
      ],
      "op": "DUP1",
      "path": "0"
    },
    "69": {
      "first_revert": true,
      "fn": null,
      "offset": [
        58,
        1074
      ],
      "op": "REVERT",
      "path": "0"
    },
    "70": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        724,
        1072
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "71": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        724,
        1072
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x59"
    },
    "74": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        724,
        1072
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x54"
    },
    "77": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        724,
        1072
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "78": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        724,
        1072
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "80": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        724,
        1072
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23E"
    },
    "83": {
      "fn": "PhotoRegistry.transferOwner",
      "jump": "i",
      "offset": [
        724,
        1072
      ],
      "op": "JUMP",
      "path": "0"
    },
    "84": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        724,
        1072
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "85": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        724,
        1072
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC4"
    },
    "88": {
      "fn": "PhotoRegistry.transferOwner",
      "jump": "i",
      "offset": [
        724,
        1072
      ],
      "op": "JUMP",
      "path": "0"
    },
    "89": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        724,
        1072
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "90": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        724,
        1072
      ],
      "op": "STOP",
      "path": "0"
    },
    "91": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        468,
        718
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "92": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        468,
        718
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x59"
    },
    "95": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        468,
        718
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x69"
    },
    "98": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        468,
        718
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "99": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        468,
        718
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "101": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        468,
        718
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27A"
    },
    "104": {
      "fn": "PhotoRegistry.anchor",
      "jump": "i",
      "offset": [
        468,
        718
      ],
      "op": "JUMP",
      "path": "0"
    },
    "105": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        468,
        718
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "106": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        468,
        718
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18B"
    },
    "109": {
      "fn": "PhotoRegistry.anchor",
      "jump": "i",
      "offset": [
        468,
        718
      ],
      "op": "JUMP",
      "path": "0"
    },
    "110": {
      "offset": [
        142,
        181
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "111": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        142,
        181
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA1"
    },
    "114": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        142,
        181
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C"
    },
    "117": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        142,
        181
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "118": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        142,
        181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "120": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        142,
        181
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27A"
    },
    "123": {
      "fn": "PhotoRegistry.anchor",
      "jump": "i",
      "offset": [
        142,
        181
      ],
      "op": "JUMP",
      "path": "0"
    },
    "124": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        142,
        181
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "125": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        142,
        181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "127": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        142,
        181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "129": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        142,
        181
      ],
      "op": "DUP2",
      "path": "0"
    },
    "130": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        142,
        181
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "131": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        142,
        181
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "132": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        142,
        181
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "133": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        142,
        181
      ],
      "op": "DUP2",
      "path": "0"
    },
    "134": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        142,
        181
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "135": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        142,
        181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "137": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        142,
        181
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "138": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        142,
        181
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "139": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        142,
        181
      ],
      "op": "DUP1",
      "path": "0"
    },
    "140": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        142,
        181
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "141": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        142,
        181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "143": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        142,
        181
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "144": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        142,
        181
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "145": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        142,
        181
      ],
      "op": "ADD",
      "path": "0"
    },
    "146": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        142,
        181
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "151": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "153": {
      "op": "SHL"
    },
    "154": {
      "op": "SUB"
    },
    "155": {
      "offset": [
        142,
        181
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "156": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        142,
        181
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "157": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        142,
        181
      ],
      "op": "AND",
      "path": "0"
    },
    "158": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        142,
        181
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "159": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        142,
        181
      ],
      "op": "DUP3",
      "path": "0"
    },
    "160": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        142,
        181
      ],
      "op": "JUMP",
      "path": "0"
    },
    "161": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        142,
        181
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "162": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        142,
        181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "164": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        142,
        181
      ],
      "op": "DUP1",
      "path": "0"
    },
    "165": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        142,
        181
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "170": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "172": {
      "op": "SHL"
    },
    "173": {
      "op": "SUB"
    },
    "174": {
      "op": "SWAP1"
    },
    "175": {
      "op": "SWAP4"
    },
    "176": {
      "op": "AND"
    },
    "177": {
      "op": "DUP4"
    },
    "178": {
      "op": "MSTORE"
    },
    "179": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "181": {
      "op": "DUP4"
    },
    "182": {
      "op": "ADD"
    },
    "183": {
      "op": "SWAP2"
    },
    "184": {
      "op": "SWAP1"
    },
    "185": {
      "op": "SWAP2"
    },
    "186": {
      "op": "MSTORE"
    },
    "187": {
      "op": "ADD"
    },
    "188": {
      "offset": [
        142,
        181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "190": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        142,
        181
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "191": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        142,
        181
      ],
      "op": "DUP1",
      "path": "0"
    },
    "192": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        142,
        181
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "193": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        142,
        181
      ],
      "op": "SUB",
      "path": "0"
    },
    "194": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        142,
        181
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "195": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        142,
        181
      ],
      "op": "RETURN",
      "path": "0"
    },
    "196": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        724,
        1072
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "197": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        802,
        814
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "199": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        817,
        833
      ],
      "op": "DUP3",
      "path": "0"
    },
    "200": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        817,
        833
      ],
      "op": "DUP2",
      "path": "0"
    },
    "201": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        817,
        833
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "202": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        817,
        833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "204": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        817,
        833
      ],
      "op": "DUP2",
      "path": "0"
    },
    "205": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        817,
        833
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "206": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        817,
        833
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "207": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        817,
        833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "209": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        817,
        833
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "210": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        817,
        833
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "211": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        817,
        839
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "216": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "218": {
      "op": "SHL"
    },
    "219": {
      "op": "SUB"
    },
    "220": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        817,
        839
      ],
      "op": "AND",
      "path": "0"
    },
    "221": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        853,
        863
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 0
    },
    "222": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        853,
        871
      ],
      "op": "DUP2",
      "path": "0"
    },
    "223": {
      "branch": 7,
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        853,
        871
      ],
      "op": "EQ",
      "path": "0"
    },
    "224": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        849,
        890
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFC"
    },
    "227": {
      "branch": 7,
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        849,
        890
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "228": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        880,
        890
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "230": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        880,
        890
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "231": {
      "op": "PUSH4",
      "value": "0x30CD7471"
    },
    "236": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "238": {
      "op": "SHL"
    },
    "239": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        880,
        890
      ],
      "op": "DUP2",
      "path": "0"
    },
    "240": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        880,
        890
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "241": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        880,
        890
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "243": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        880,
        890
      ],
      "op": "ADD",
      "path": "0"
    },
    "244": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        880,
        890
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "246": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        880,
        890
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "247": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        880,
        890
      ],
      "op": "DUP1",
      "path": "0"
    },
    "248": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        880,
        890
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "249": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        880,
        890
      ],
      "op": "SUB",
      "path": "0"
    },
    "250": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        880,
        890
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "251": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        880,
        890
      ],
      "op": "REVERT",
      "path": "0"
    },
    "252": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        849,
        890
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "257": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "259": {
      "op": "SHL"
    },
    "260": {
      "op": "SUB"
    },
    "261": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        904,
        926
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 1
    },
    "262": {
      "branch": 8,
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        904,
        926
      ],
      "op": "AND",
      "path": "0"
    },
    "263": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        900,
        953
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x123"
    },
    "266": {
      "branch": 8,
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        900,
        953
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "267": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        935,
        953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "269": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        935,
        953
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "270": {
      "op": "PUSH4",
      "value": "0x4E469669"
    },
    "275": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "277": {
      "op": "SHL"
    },
    "278": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        935,
        953
      ],
      "op": "DUP2",
      "path": "0"
    },
    "279": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        935,
        953
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "280": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        935,
        953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "282": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        935,
        953
      ],
      "op": "ADD",
      "path": "0"
    },
    "283": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        935,
        953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "285": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        935,
        953
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "286": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        935,
        953
      ],
      "op": "DUP1",
      "path": "0"
    },
    "287": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        935,
        953
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "288": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        935,
        953
      ],
      "op": "SUB",
      "path": "0"
    },
    "289": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        935,
        953
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "290": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        935,
        953
      ],
      "op": "REVERT",
      "path": "0"
    },
    "291": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        900,
        953
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "292": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        963,
        969
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x0"
    },
    "294": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        963,
        979
      ],
      "op": "DUP4",
      "path": "0"
    },
    "295": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        963,
        979
      ],
      "op": "DUP2",
      "path": "0"
    },
    "296": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        963,
        979
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "297": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        963,
        979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "299": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        963,
        979
      ],
      "op": "DUP2",
      "path": "0"
    },
    "300": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        963,
        979
      ],
      "op": "DUP2",
      "path": "0"
    },
    "301": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        963,
        979
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "302": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        963,
        979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "304": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        963,
        979
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "305": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        963,
        979
      ],
      "op": "DUP3",
      "path": "0"
    },
    "306": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        963,
        979
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "307": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        963,
        979
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "308": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        963,
        996
      ],
      "op": "DUP1",
      "path": "0"
    },
    "309": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        963,
        996
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "314": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "316": {
      "op": "SHL"
    },
    "317": {
      "op": "SUB"
    },
    "318": {
      "op": "NOT"
    },
    "319": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        963,
        996
      ],
      "op": "AND",
      "path": "0"
    },
    "320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "324": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "326": {
      "op": "SHL"
    },
    "327": {
      "op": "SUB"
    },
    "328": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        963,
        996
      ],
      "op": "DUP7",
      "path": "0"
    },
    "329": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        963,
        996
      ],
      "op": "DUP2",
      "path": "0"
    },
    "330": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        963,
        996
      ],
      "op": "AND",
      "path": "0"
    },
    "331": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        963,
        996
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "332": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        963,
        996
      ],
      "op": "DUP3",
      "path": "0"
    },
    "333": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        963,
        996
      ],
      "op": "OR",
      "path": "0"
    },
    "334": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        963,
        996
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "335": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        963,
        996
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "336": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        963,
        996
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "337": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        1011,
        1065
      ],
      "op": "SWAP3",
      "path": "0",
      "statement": 3
    },
    "338": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        1011,
        1065
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "339": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        1049,
        1064
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "340": {
      "op": "DUP2"
    },
    "341": {
      "op": "MSTORE"
    },
    "342": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        1011,
        1065
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "343": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        1011,
        1065
      ],
      "op": "DUP5",
      "path": "0"
    },
    "344": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        1011,
        1065
      ],
      "op": "AND",
      "path": "0"
    },
    "345": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        1011,
        1065
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "346": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        963,
        979
      ],
      "op": "DUP7",
      "path": "0"
    },
    "347": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        963,
        979
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "348": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x4CAFE8C90C0E3A2FA8DA6FA1827B31FF8BE7D9EFB7F85B110C3481AD9B36BEFF"
    },
    "381": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        1011,
        1065
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "382": {
      "op": "ADD"
    },
    "383": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "385": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        1011,
        1065
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "386": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        1011,
        1065
      ],
      "op": "DUP1",
      "path": "0"
    },
    "387": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        1011,
        1065
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "388": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        1011,
        1065
      ],
      "op": "SUB",
      "path": "0"
    },
    "389": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        1011,
        1065
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "390": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        1011,
        1065
      ],
      "op": "LOG4",
      "path": "0"
    },
    "391": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        792,
        1072
      ],
      "op": "POP",
      "path": "0"
    },
    "392": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        724,
        1072
      ],
      "op": "POP",
      "path": "0"
    },
    "393": {
      "fn": "PhotoRegistry.transferOwner",
      "offset": [
        724,
        1072
      ],
      "op": "POP",
      "path": "0"
    },
    "394": {
      "fn": "PhotoRegistry.transferOwner",
      "jump": "o",
      "offset": [
        724,
        1072
      ],
      "op": "JUMP",
      "path": "0"
    },
    "395": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        468,
        718
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "396": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        559,
        560
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x0"
    },
    "398": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        525,
        541
      ],
      "op": "DUP2",
      "path": "0"
    },
    "399": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        525,
        541
      ],
      "op": "DUP2",
      "path": "0"
    },
    "400": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        525,
        541
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "401": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        525,
        541
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "403": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        525,
        541
      ],
      "op": "DUP2",
      "path": "0"
    },
    "404": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        525,
        541
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "405": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        525,
        541
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "406": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        525,
        541
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "408": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        525,
        541
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "409": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        525,
        541
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "410": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        525,
        547
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "415": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "417": {
      "op": "SHL"
    },
    "418": {
      "op": "SUB"
    },
    "419": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        525,
        547
      ],
      "op": "AND",
      "path": "0"
    },
    "420": {
      "branch": 9,
      "fn": "PhotoRegistry.anchor",
      "offset": [
        525,
        561
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "421": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        521,
        586
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C1"
    },
    "424": {
      "branch": 9,
      "fn": "PhotoRegistry.anchor",
      "offset": [
        521,
        586
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "425": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        570,
        586
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "427": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        570,
        586
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "428": {
      "op": "PUSH4",
      "value": "0xC8D9EAB"
    },
    "433": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "435": {
      "op": "SHL"
    },
    "436": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        570,
        586
      ],
      "op": "DUP2",
      "path": "0"
    },
    "437": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        570,
        586
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "438": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        570,
        586
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "440": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        570,
        586
      ],
      "op": "ADD",
      "path": "0"
    },
    "441": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        570,
        586
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "443": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        570,
        586
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "444": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        570,
        586
      ],
      "op": "DUP1",
      "path": "0"
    },
    "445": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        570,
        586
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "446": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        570,
        586
      ],
      "op": "SUB",
      "path": "0"
    },
    "447": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        570,
        586
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "448": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        570,
        586
      ],
      "op": "REVERT",
      "path": "0"
    },
    "449": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        521,
        586
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "450": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        615,
        649
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x40"
    },
    "452": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        615,
        649
      ],
      "op": "DUP1",
      "path": "0"
    },
    "453": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        615,
        649
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "454": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        615,
        649
      ],
      "op": "DUP1",
      "path": "0"
    },
    "455": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        615,
        649
      ],
      "op": "DUP3",
      "path": "0"
    },
    "456": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        615,
        649
      ],
      "op": "ADD",
      "path": "0"
    },
    "457": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        615,
        649
      ],
      "op": "DUP3",
      "path": "0"
    },
    "458": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        615,
        649
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "459": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        621,
        631
      ],
      "op": "CALLER",
      "path": "0"
    },
    "460": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        615,
        649
      ],
      "op": "DUP1",
      "path": "0"
    },
    "461": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        615,
        649
      ],
      "op": "DUP3",
      "path": "0"
    },
    "462": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        615,
        649
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "463": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        633,
        648
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "464": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        615,
        649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "466": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        615,
        649
      ],
      "op": "DUP1",
      "path": "0"
    },
    "467": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        615,
        649
      ],
      "op": "DUP5",
      "path": "0"
    },
    "468": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        615,
        649
      ],
      "op": "ADD",
      "path": "0"
    },
    "469": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        615,
        649
      ],
      "op": "DUP3",
      "path": "0"
    },
    "470": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        615,
        649
      ],
      "op": "DUP2",
      "path": "0"
    },
    "471": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        615,
        649
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "472": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "474": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        596,
        612
      ],
      "op": "DUP8",
      "path": "0"
    },
    "475": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        596,
        612
      ],
      "op": "DUP2",
      "path": "0"
    },
    "476": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        596,
        612
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "477": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        596,
        612
      ],
      "op": "DUP1",
      "path": "0"
    },
    "478": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        596,
        612
      ],
      "op": "DUP4",
      "path": "0"
    },
    "479": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        596,
        612
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "480": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        596,
        612
      ],
      "op": "DUP7",
      "path": "0"
    },
    "481": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        596,
        612
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "482": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        596,
        612
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "483": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        596,
        649
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "484": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        596,
        649
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "485": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        596,
        649
      ],
      "op": "DUP6",
      "path": "0"
    },
    "486": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        596,
        649
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "491": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "493": {
      "op": "SHL"
    },
    "494": {
      "op": "SUB"
    },
    "495": {
      "op": "NOT"
    },
    "496": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        596,
        649
      ],
      "op": "AND",
      "path": "0"
    },
    "497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "501": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "503": {
      "op": "SHL"
    },
    "504": {
      "op": "SUB"
    },
    "505": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        596,
        649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "506": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        596,
        649
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "507": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        596,
        649
      ],
      "op": "AND",
      "path": "0"
    },
    "508": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        596,
        649
      ],
      "op": "OR",
      "path": "0"
    },
    "509": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        596,
        649
      ],
      "op": "DUP6",
      "path": "0"
    },
    "510": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        596,
        649
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "511": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        596,
        649
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "514": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        596,
        649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "515": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        596,
        649
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "516": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        596,
        649
      ],
      "op": "ADD",
      "path": "0"
    },
    "517": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        596,
        649
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "518": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        596,
        649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "519": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        596,
        649
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "520": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        596,
        649
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "521": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        664,
        711
      ],
      "op": "SWAP3",
      "path": "0",
      "statement": 6
    },
    "522": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        664,
        711
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "523": {
      "op": "SWAP3"
    },
    "524": {
      "op": "DUP4"
    },
    "525": {
      "op": "MSTORE"
    },
    "526": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        621,
        631
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "527": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        596,
        612
      ],
      "op": "DUP4",
      "path": "0"
    },
    "528": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        596,
        612
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "529": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        664,
        711
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xFE2289542F7A0110AC112C3A4D712AFDCAAF2900A1326F4E6F340B563A0E8734"
    },
    "562": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        664,
        711
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "563": {
      "op": "ADD"
    },
    "564": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        664,
        711
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "566": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        664,
        711
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "567": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        664,
        711
      ],
      "op": "DUP1",
      "path": "0"
    },
    "568": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        664,
        711
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "569": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        664,
        711
      ],
      "op": "SUB",
      "path": "0"
    },
    "570": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        664,
        711
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "571": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        664,
        711
      ],
      "op": "LOG3",
      "path": "0"
    },
    "572": {
      "fn": "PhotoRegistry.anchor",
      "offset": [
        468,
        718
      ],
      "op": "POP",
      "path": "0"
    },
    "573": {
      "fn": "PhotoRegistry.anchor",
      "jump": "o",
      "offset": [
        468,
        718
      ],
      "op": "JUMP",
      "path": "0"
    },
    "574": {
      "op": "JUMPDEST"
    },
    "575": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "577": {
      "op": "DUP1"
    },
    "578": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "580": {
      "op": "DUP4"
    },
    "581": {
      "op": "DUP6"
    },
    "582": {
      "op": "SUB"
    },
    "583": {
      "op": "SLT"
    },
    "584": {
      "op": "ISZERO"
    },
    "585": {
      "op": "PUSH2",
      "value": "0x251"
    },
    "588": {
      "op": "JUMPI"
    },
    "589": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "591": {
      "op": "DUP1"
    },
    "592": {
      "op": "REVERT"
    },
    "593": {
      "op": "JUMPDEST"
    },
    "594": {
      "op": "DUP3"
    },
    "595": {
      "op": "CALLDATALOAD"
    },
    "596": {
      "op": "SWAP2"
    },
    "597": {
      "op": "POP"
    },
    "598": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "600": {
      "op": "DUP4"
    },
    "601": {
      "op": "ADD"
    },
    "602": {
      "op": "CALLDATALOAD"
    },
    "603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "607": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "609": {
      "op": "SHL"
    },
    "610": {
      "op": "SUB"
    },
    "611": {
      "op": "DUP2"
    },
    "612": {
      "op": "AND"
    },
    "613": {
      "op": "DUP2"
    },
    "614": {
      "op": "EQ"
    },
    "615": {
      "op": "PUSH2",
      "value": "0x26F"
    },
    "618": {
      "op": "JUMPI"
    },
    "619": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "621": {
      "op": "DUP1"
    },
    "622": {
      "op": "REVERT"
    },
    "623": {
      "op": "JUMPDEST"
    },
    "624": {
      "op": "DUP1"
    },
    "625": {
      "op": "SWAP2"
    },
    "626": {
      "op": "POP"
    },
    "627": {
      "op": "POP"
    },
    "628": {
      "op": "SWAP3"
    },
    "629": {
      "op": "POP"
    },
    "630": {
      "op": "SWAP3"
    },
    "631": {
      "op": "SWAP1"
    },
    "632": {
      "op": "POP"
    },
    "633": {
      "jump": "o",
      "op": "JUMP"
    },
    "634": {
      "op": "JUMPDEST"
    },
    "635": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "637": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "639": {
      "op": "DUP3"
    },
    "640": {
      "op": "DUP5"
    },
    "641": {
      "op": "SUB"
    },
    "642": {
      "op": "SLT"
    },
    "643": {
      "op": "ISZERO"
    },
    "644": {
      "op": "PUSH2",
      "value": "0x28C"
    },
    "647": {
      "op": "JUMPI"
    },
    "648": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "650": {
      "op": "DUP1"
    },
    "651": {
      "op": "REVERT"
    },
    "652": {
      "op": "JUMPDEST"
    },
    "653": {
      "op": "POP"
    },
    "654": {
      "op": "CALLDATALOAD"
    },
    "655": {
      "op": "SWAP2"
    },
    "656": {
      "op": "SWAP1"
    },
    "657": {
      "op": "POP"
    },
    "658": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "06aec5a9f8a12f96eb517a97c78a2101608781a6",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\ncontract PhotoRegistry {\n    struct Claim { address owner; uint256 timestamp; }\n    mapping(bytes32 => Claim) public claims;\n\n    event Anchored(bytes32 indexed fileHash, address indexed owner, uint256 timestamp);\n    event Transferred(bytes32 indexed fileHash, address indexed from, address indexed to, uint256 timestamp);\n\n    error AlreadyClaimed();\n    error NotOwner();\n    error InvalidRecipient();\n\n    function anchor(bytes32 fileHash) external {\n        if (claims[fileHash].owner != address(0)) revert AlreadyClaimed();\n        claims[fileHash] = Claim(msg.sender, block.timestamp);\n        emit Anchored(fileHash, msg.sender, block.timestamp);\n    }\n\n    function transferOwner(bytes32 fileHash, address newOwner) external {\n        address curr = claims[fileHash].owner;\n        if (msg.sender != curr) revert NotOwner();\n        if (newOwner == address(0)) revert InvalidRecipient();\n        claims[fileHash].owner = newOwner;\n        emit Transferred(fileHash, curr, newOwner, block.timestamp);\n    }\n}\n",
  "sourceMap": "58:1016:0:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/PhotoRegistry.sol",
  "type": "contract"
}